clc; close all; clear variables; 
%%
[trainCombined, valCombined] = ReadDIODEToDatastore("images\train\indoors\");
%%
lgraph = pipeline2();
inputSize = lgraph.Layers(1).InputSize;
coarseGraph = lgraph.Layers(1:17);
% a = alexnet;
% alexnetTransfer = a.Layers(1:end-3);
% layers = [alexnetTransfer
%           fullyConnectedLayer(3249,'Name','FC 2')
%           reshapeLayer('reshape 1')
%           SIERegressionLayer("SIE")];

layers = [ coarseGraph
          SIERegressionLayer("SIE")];
%%
options = trainingOptions("adam", ...
    'MiniBatchSize',32, ...
    'MaxEpochs',4, ...
    'InitialLearnRate',1e-3, ...
    'Shuffle','every-epoch', ...
    'ValidationData', valCombined, ...
    'ValidationFrequency',50, ...
    'Verbose', false, ...
    'Plots','training-progress');

net = trainNetwork(trainCombined,layers,options);
%%
options = trainingOptions("adam", ...
    'MiniBatchSize',32, ...
    'MaxEpochs',4, ...
    'InitialLearnRate',1e-4, ...
    'Shuffle','every-epoch', ...
    'ValidationData', valCombined, ...
    'ValidationFrequency',50, ...
    'Verbose', false, ...
    'Plots','training-progress');

for i=1:3
    [trainCombined, valCombined] = ReadDIODEToDatastore("images\train\indoors\");
    net = trainNetwork(trainCombined,net.layerGraph,options);
end
% 
% save("coarseNet3.mat",'net');
